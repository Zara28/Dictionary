using System;
using System.Collections.Generic;

namespace VPI_dict
{
    class Program
    {
        static void Main(string[] args)
        {
            int ccount=0;
            int n = 202;
            bool verno;
            List <string> pon = new List<string>();
            List<string> opr = new List<string>();

            Console.WriteLine("Привет, это ИТ-угадайка\n");
            pon.Add("C++");
            pon.Add("Windows");
            pon.Add("C#");
            pon.Add("filenotfoundexception");
            pon.Add("argumentoutofrangeexception");
            pon.Add("invalidcastexception");
            pon.Add("argumentexception");
            pon.Add("database is mandatory on usermailbox");
            pon.Add("Microsoft SQL Server, Error: 11001");
            pon.Add("microsoft sql server error 18456");
            pon.Add("ошибка 233 sql server");
            pon.Add("Linux");
            pon.Add("Swift");
            pon.Add("Go");

            //1
            opr.Add("Язык C++ используется для разработки операционных систем, программирования встроенных систем, разработки игр, разработки баз данных, разработки настольных и кроссплатформенных приложений (с помощью средств C++)");
            //2
            opr.Add("Windows:это операционная система, сделанная корпорацией Microsoft (Майкрософт). Операционная система (ОС) — это главная программа, которая запускается при включении компьютера");
            //3
            opr.Add("C#:объектно-ориентированный язык программирования. Разработан в 1998—2001 годах группой инженеров компании Microsoft под руководством Андерса Хейлсберга и Скотта Вильтаумота как язык разработки приложений для платформы Microsoft .NET Framework. Впоследствии был стандартизирован как ECMA-334 и ISO/IEC 23270.\n" +
                    "public class HelloWorld \n { public static void main(String[] args)\n  {\nSystem.out.println(Hello World!);\n  }\n}");
            //4
            opr.Add("filenotfoundexception:Причина- программа не нашла файл, который используется в работе. Решение- Нужно проверить, какой файл код ищет в рабочей среде");
            //5
            opr.Add("Причина:\n" +
"Исключение, которое выдается, если значение аргумента не соответствует допустимому диапазону значений, установленному вызванным методом.\n" +
"Решение:\n" +
"1.Чтобы исправить ошибку, убедитесь, что значение недопустимого аргумента не отрицательное.Это можно сделать, указав допустимое значение.\n" +
"2.Убедитесь, что доступ к общему состоянию осуществляется потокобезопасным способом.\n" +
"3.Если в приложении используется объект массива или коллекции, рассмотрите возможность использования классической коллекции, такой как типы в System.Collections.Concurrent пространстве имен или System.Collections.Immutable выпуске по внештатному каналу.");
            //6
            opr.Add("Причина: Исключение, которое выбрасывается при недопустимом приведении или явном преобразовании типов. Во многих случаях языковой компилятор обнаруживает, что между исходным типом и целевым типом не существует преобразования и выдает ошибку компилятора.\nРешения:" +
"1.Если напрямую или косвенно вызывать реализацию примитивного типа IConvertible, который не поддерживает определенное преобразование.Или Convert.ChangeType метод для преобразования объекта из одного типа в другой, но один или оба типа не реализуют IConvertible интерфейс.- В большинстве случаев, поскольку преобразование не поддерживается, обходной путь не существует.В некоторых случаях возможный обходной путь состоит в том, чтобы вручную назначить значения свойств из типа источника аналогично свойствам целевого типа." +
"\n2.Опуститься - Выполняется наследование, то есть попытка преобразовать экземпляр базового типа в один из его производных типов."+
"\n3.Преобразование из объекта интерфейса - Предпринимается попытка преобразовать объект интерфейса в тип, реализующий этот интерфейс, но тип целевого объекта не совпадает с типом или базовым классом типа, от которого был изначально получен объект интерфейса. - Так как сообщение об исключении указывает, преобразование будет выполнено, только если объект интерфейса преобразован обратно в экземпляр исходного типа.Преобразование также будет выполнено, если объект интерфейса преобразуется в экземпляр базового типа исходного типа." +
"\n4.Преобразование строк - Преобразовать значение или объект в его строковое представление с помощью оператора приведения в C#. Чтобы успешно преобразовать экземпляр любого типа в строковое представление, вызовите его ToString метод, как показано в следующем примере. ToStringМетод всегда представлен, так как ToString метод определяется Object классом и, следовательно, либо наследуется, либо переопределен всеми управляемыми типами.");
            //7
            opr.Add("ПричинаnЭта проблема возникает из - за того, что недействительный пользовательский контекст остается в кэше IIS.\nРешение:\nЧтобы устранить эту проблему, замените ссылку Sign Out ссылкой Sign -in As Different User link for all web front end - servers на ферме SharePoint.");
            //8
            opr.Add("database is mandatory on usermailbox:Ошибка возникает при проблемах с репликацией КД. Также это происходит из-за потери события восстановления объекта из уделённых Решение- нужно на CHBC запустить Powershell, и найти этот объект");
            //9
            opr.Add("Microsoft SQL Server, Error- 11001:Причина: Клиенту SQL Server не удается установить соединение с сервером. Эта ошибка может возникать в том случае, если клиенту не удается преобразовать имя сервера либо если указано неверное имя сервера. Как решить- Убедитесь, что в клиенте введено правильное имя сервера, а также в том, что удается преобразовать имя сервера от клиента.Разрешение имен TCP / IP можно проверить с помощью команды ping в операционной системе Windows.");
            //10

            opr.Add("Microsoft sql server error 18456:Причина:попытка использовать имя учетной записи NT с именем SQL Аутентификация Сервера. Как решить - В среде Microsoft SQL Server Management Studio в объекте explorer : Щелкните правой кнопкой мыши на сервере и выберите Properties Перейдите на страницу Security В разделе Server authentication выберите переключатель SQL Serverand Windows Authentication mode Нажмите OK Перезапустить службы SQL ");
            //11
            opr.Add("ошибка 233 sql server:Причина:Причина, по которой мы получили эту ошибку, заключается в том, что пользовательские подключения были сброшены на 1, поэтому только один пользователь смог подключиться к серверу SQL. сработал всего лишь простой запрос. Я надеюсь, что это сработает и для других. Как решить : Подключитесь к SQL серверу; Откройте SQL Server Configuration Manager.Перейдите в настройку SQL Server Network Configuration → Protocols for% название%;");
            //12
            opr.Add("Linux — семейство Unix-подобных операционных систем на базе ядра Linux, включающих тот или иной набор утилит и программ проекта GNU, и, возможно, другие компоненты. Как и ядро Linux, системы на его основе как правило создаются и распространяются в соответствии с моделью разработки свободного и открытого программного обеспечения.\n"+"Создатель и год создания: Линус Торвальд, 1991 год\n" +"Цели: Создание удобной и доступной операционной системы для персональных компьютеров ");
            opr.Add("database is mandatory on usermailbox. Ошибка возникает при проблемах с репликацией КД.Также это происходит из - за потери события восстановления объекта из уделённых\nРешение: нужно на CHBC запустить Powershell, и найти этот объект\nЕсли это - универсальная группа, определенная в домене CHELYABINSK(а особенно - если еще и удаленная), то можно смело временно отключить Strict Replication Consistency на принимающем КД(MSDC, насколько я понимаю, а нужный для отключения / включения ключ реестра - Replication Consistency - указан в тексте события 1988 в журнале Directory Service на нем), и пробовать произвести репликацию на него c CHBC.");
            //13
            opr.Add("Старший вице-президент по разработке программного обеспечения Apple Крейг Федериги во время анонса этого продукта заявил, что язык программирования Swift был заложен ещё в платформе NeXT, которая стала основой для современной macOS, а затем и iOS.\nРазработка текущего варианта языка Swift была начата в 2010 году Крисом Латтнером, руководителем отдела разработки инструментов для создания программного обеспечения Apple и одним из основных разработчиков LLVM. Swift заимствовал идеи из «Objective-C, Rust, Haskell, Ruby, Python, C#, CLU, и ещё из стольких многих языков, что сложно перечислить». Первоначально для нового языка использовали название Shiny.\n2 июня 2014 года на конференции WWDC Swift был официально представлен вместе с бесплатным руководством по использованию языка объёмом в 500 страниц, доступным на сервисе «iBook Store»].\nЯзык используется для создания кросплатформенных приложений для продуктов компании Apple на операционной системе IOS" + "\nПример кода: " + "\n// Переменные" + "\nvar implicitInteger = 70" + "\nvar implicitDouble = 70.0" + "\n// Константы" + "\nlet speedOfLight = 299_792_458" + "\nlet numberOfApples = 3" + "\n print('Hello, world')" + "\nlet people = ['Anna': 67', 'Bet': 8, 'Jack': 33, 'Sam: 25]" + "\n for (name, age) in people {" + "\n print('\\(name) is \\(age) years old.')");
            //14
            opr.Add("Разработка Go началась в сентябре 2007 года, его непосредственным проектированием занимались Роберт Гризмер, Роб Пайк и Кен Томпсон, занимавшиеся до этого проектом разработки операционной системы Inferno. Официально язык был представлен в ноябре 2009 года. На данный момент поддержка официального компилятора, разрабатываемого создателями языка, осуществляется для операционных систем FreeBSD, OpenBSD, Linux, macOS, Windows, DragonFly BSD, Plan 9, Solaris, Android, AIX\nДля чего используется:\nЯзык Go разрабатывался как язык программирования для создания высокоэффективных программ, работающих на современных распределённых системах и многоядерных процессорах.Он может рассматриваться как попытка создать замену языкам Си и C++ с учётом изменившихся компьютерных технологий и накопленного опыта разработки крупных систем\nПример кода:" +
"\npackage main\n import 'fmt'\n// this is a comment\nfunc main() {\n                fmt.Println('Hello World')\n}            ");
            while (n!=101)
            {
                Random rnd = new Random();
                string rand = opr[rnd.Next(13)];
                Console.WriteLine(rand);

                Console.WriteLine();

                Console.WriteLine();
                Console.WriteLine("Выбери номер понятия, о котором идет речь. для закрытия программы введи 101");
                
               
                for (int i = 1; i <= pon.Count; i++)
                {
                    Console.WriteLine(Convert.ToString(i)+" " + pon[i-1]);
                }
               

                Console.WriteLine();

                Console.WriteLine("Введите номер понятия");
                n = Convert.ToInt32(Console.ReadLine());
                if (n==101)
                {
                    break;
                }
                if (rand == opr[n-1])
                {
                    ccount++;
                }

                    Console.Clear();
            }

            Console.WriteLine("Спасибо за игру! Ваш счет: " + Convert.ToString(ccount));
        }
            
    }
}
